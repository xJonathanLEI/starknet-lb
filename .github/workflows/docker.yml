name: "Build Multi-Arch Images"

on:
  create:

jobs:
  build-amd64:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}

    name: "Build for linux/amd64"
    runs-on: "ubuntu-latest"

    env:
      DOCKER_REPOSITORY: "starknet/starknet-lb"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Determine image version"
        run: |
          version_line="${{ github.ref }}"
          regex="^refs\/tags\/v(.*)$"
          [[ $version_line =~ $regex ]];
          echo "VERSION=${BASH_REMATCH[1]}" >> $GITHUB_ENV

      - name: "Build Docker image"
        run: |
          docker build -t ${DOCKER_REPOSITORY}:${VERSION}-amd64 -f ./Dockerfile .

      - name: "Export Docker image"
        run: |
          docker save ${DOCKER_REPOSITORY}:${VERSION}-amd64 | gzip > /tmp/amd64.tar.gz

      - name: "Upload Docker image artifact"
        uses: "actions/upload-artifact@v4"
        with:
          name: "amd64.tar.gz"
          path: "/tmp/amd64.tar.gz"

  build-arm64:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}

    name: "Build for linux/arm64"
    runs-on: "ubuntu-latest"

    env:
      DOCKER_REPOSITORY: "starknet/starknet-lb"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Determine image version"
        run: |
          version_line="${{ github.ref }}"
          regex="^refs\/tags\/v(.*)$"
          [[ $version_line =~ $regex ]];
          echo "VERSION=${BASH_REMATCH[1]}" >> $GITHUB_ENV

      - name: "Build Docker image"
        run: |
          docker build -t ${DOCKER_REPOSITORY}:${VERSION}-arm64 -f ./docker/Dockerfile.cross.aarch64-musl .

      - name: "Export Docker image"
        run: |
          docker save ${DOCKER_REPOSITORY}:${VERSION}-arm64 | gzip > /tmp/arm64.tar.gz

      - name: "Upload Docker image artifact"
        uses: "actions/upload-artifact@v4"
        with:
          name: "arm64.tar.gz"
          path: "/tmp/arm64.tar.gz"

  push:
    name: "Push Docker images"
    runs-on: "ubuntu-latest"
    needs: [build-amd64, build-arm64]

    env:
      DOCKER_REPOSITORY: "starknet/starknet-lb"

    steps:
      - name: "Download linux/amd64 image"
        uses: "actions/download-artifact@v4"
        with:
          name: "amd64.tar.gz"
          path: "/tmp/"

      - name: "Download linux/arm64/v8 image"
        uses: "actions/download-artifact@v4"
        with:
          name: "arm64.tar.gz"
          path: "/tmp/"

      - name: "Load Docker images"
        run: |
          docker load < /tmp/amd64.tar.gz
          docker load < /tmp/arm64.tar.gz

      - name: "Login to Docker Hub"
        uses: "docker/login-action@v1.6.0"
        with:
          username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          password: "${{ secrets.DOCKER_HUB_PASSWORD }}"

      - name: "Determine image version"
        run: |
          version_line="${{ github.ref }}"
          regex="^refs\/tags\/v(.*)$"
          [[ $version_line =~ $regex ]];
          echo "VERSION=${BASH_REMATCH[1]}" >> $GITHUB_ENV

      - name: "Push Docker images"
        run: |
          docker push ${DOCKER_REPOSITORY}:${VERSION}-amd64
          docker push ${DOCKER_REPOSITORY}:${VERSION}-arm64
          docker manifest create ${DOCKER_REPOSITORY}:${VERSION} \
            ${DOCKER_REPOSITORY}:${VERSION}-amd64 \
            ${DOCKER_REPOSITORY}:${VERSION}-arm64
          docker manifest create ${DOCKER_REPOSITORY}:latest \
            ${DOCKER_REPOSITORY}:${VERSION}-amd64 \
            ${DOCKER_REPOSITORY}:${VERSION}-arm64
          docker manifest push ${DOCKER_REPOSITORY}:${VERSION}
          docker manifest push ${DOCKER_REPOSITORY}:latest
